## The name of the docker network that containers will be attached to.
## If you want to proxy Packit to the host, you will need to
## arrange a proxy on this network, or use dev_mode in the web section
## below.
## Prefix for container names; we'll use {container_prefix}-(container_name)
container_prefix: packit

## Set this flag to true to prevent use of --volumes in the cli to remove
## volumes on stop
protect_data: false

## Docker org for images
repo: mrcide

## The name of the docker network that containers will be attached to.
## If you want to proxy Packit to the host, you will need to
## arrange a proxy on this network
network: packit-network

## Names of the docker volumes to use:
##
## outpack: stores the outpack metadata
## proxy_logs: stores logs from the reverse proxy (only used if proxy is given)
## (More volumes are anticipated as the tool develops)
volumes:
  outpack: outpack_volume
  proxy_logs: packit_proxy_logs

outpack:
  ## Initialise an outpack directory by cloning from github
  initial:
    ##  If using a private repo, then use an ssh url and provide ssh keys in the
    ## "ssh" section above.
    url: https://github.com/reside-ic/orderly3-example.git
  server:
    name: outpack_server
    tag: main
  migrate:
    name: outpack.orderly
    tag: main

packit:
  api:
    name: packit-api
    tag: mrc-4922
  app:
    name: packit
    tag: main
  db:
    name: packit-db
    tag: main
    user: packituser
    password: changeme
  auth:
    enabled: true
    enable_github_login: true
    expiry_days: 1
    github_api_org: mrc-ide
    github_api_team: packit
    github_client:
      id: VAULT:secret/packit/githubauth/auth/githubclient:id
      secret: VAULT:secret/packit/githubauth/auth/githubclient:secret
    jwt:
      secret: VAULT:secret/packit/githubauth/auth/jwt:secret
    oauth2:
      redirect:
        # Root url which OAuth2 app will be requested to use to redirect back to packit api - must match root of OAuth2 app's registered url
        packit_api_root: "https://localhost/packit/api"
        url: "https://localhost/redirect" # Url for redirecting back to the front end after successful authentication

## If running a proxy directly, fill this section in.  Otherwise you
## are responsible for proxying the application out of the docker
## network
proxy:
  enabled: true
  hostname: localhost
  port_http: 80
  port_https: 443
  image:
    name: packit-proxy
    tag: main

vault:
  ## Address of the vault server.  This should be a string if it is
  ## present.
  addr: https://vault.dide.ic.ac.uk:8200
  auth:
    ## Authentication type - must be either "token" or the name of a
    ## supported authentication method.  These seem to be poorly
    ## documented in the hvac, but include "github" for github
    ## authentication.
    ##
    ## On a vault client object, see auth.implemented_class_names for
    ## a list, which is currently
    ##
    ##     azure, github, gcp, kubernetes, ldap, mfa, okta
    method: github
